using System.Collections.Immutable;
using TableConverter.DataGeneration.DataModels;
using TableConverter.DataGeneration.Interfaces;
using TableConverter.DataGeneration.LocaleDataSetsBase;

namespace TableConverter.DataGeneration.LocaleDataSets.en;

public class CompanyDataSet : CompanyBase
{
    public override ImmutableArray<string> BuzzAdjective { get; } =
    [
        "24/7",
        "AI-driven",
        "B2B",
        "B2C",
        "back-end",
        "best-of-breed",
        "bleeding-edge",
        "collaborative",
        "compelling",
        "cross-media",
        "cross-platform",
        "customized",
        "cutting-edge",
        "decentralized",
        "distributed",
        "dynamic",
        "efficient",
        "end-to-end",
        "enterprise",
        "extensible",
        "frictionless",
        "front-end",
        "generative",
        "global",
        "granular",
        "holistic",
        "immersive",
        "impactful",
        "innovative",
        "integrated",
        "interactive",
        "intuitive",
        "killer",
        "leading-edge",
        "magnetic",
        "mission-critical",
        "next-generation",
        "one-to-one",
        "open-source",
        "out-of-the-box",
        "plug-and-play",
        "proactive",
        "quantum",
        "real-time",
        "revolutionary",
        "rich",
        "robust",
        "scalable",
        "seamless",
        "smart",
        "sticky",
        "strategic",
        "sustainable",
        "synergistic",
        "transparent",
        "turn-key",
        "ubiquitous",
        "user-centric",
        "value-added",
        "vertical",
        "viral",
        "virtual",
        "visionary",
        "world-class"
    ];

    public override ImmutableArray<string> BuzzNoun { get; } =
    [
        "AI",
        "ROI",
        "applications",
        "architectures",
        "blockchains",
        "channels",
        "communities",
        "content",
        "convergence",
        "deliverables",
        "e-commerce",
        "experiences",
        "functionalities",
        "infrastructures",
        "initiatives",
        "interfaces",
        "large language models",
        "lifetime value",
        "markets",
        "methodologies",
        "metrics",
        "mindshare",
        "models",
        "networks",
        "niches",
        "paradigms",
        "partnerships",
        "platforms",
        "relationships",
        "schemas",
        "smart contracts",
        "solutions",
        "supply-chains",
        "synergies",
        "systems",
        "technologies",
        "users",
        "web services"
    ];

    public override ImmutableArray<string> BuzzVerb { get; } =
    [
        "aggregate",
        "architect",
        "benchmark",
        "brand",
        "collaborate",
        "cultivate",
        "deliver",
        "deploy",
        "disintermediate",
        "drive",
        "embrace",
        "empower",
        "enable",
        "engage",
        "engineer",
        "enhance",
        "evolve",
        "expedite",
        "exploit",
        "extend",
        "facilitate",
        "gamify",
        "generate",
        "grow",
        "harness",
        "implement",
        "incentivize",
        "incubate",
        "innovate",
        "integrate",
        "iterate",
        "leverage",
        "maximize",
        "mesh",
        "monetize",
        "optimize",
        "orchestrate",
        "productize",
        "redefine",
        "reinvent",
        "repurpose",
        "revolutionize",
        "scale",
        "seize",
        "simplify",
        "strategize",
        "streamline",
        "syndicate",
        "synthesize",
        "target",
        "transform",
        "transition",
        "unleash",
        "utilize",
        "visualize",
        "whiteboard"
    ];

    public override ImmutableArray<string> Adjective { get; } =
    [
        "AI-driven",
        "Adaptive",
        "Advanced",
        "Automated",
        "Balanced",
        "Business-focused",
        "Centralized",
        "Compatible",
        "Configurable",
        "Cross-platform",
        "Customer-focused",
        "Customizable",
        "Decentralized",
        "Devolved",
        "Digitized",
        "Distributed",
        "Diverse",
        "Enhanced",
        "Ergonomic",
        "Exclusive",
        "Expanded",
        "Extended",
        "Face to face",
        "Focused",
        "Front-line",
        "Fully-configurable",
        "Fundamental",
        "Future-proofed",
        "Grass-roots",
        "Horizontal",
        "Immersive",
        "Implemented",
        "Innovative",
        "Integrated",
        "Intuitive",
        "Managed",
        "Monitored",
        "Multi-tiered",
        "Networked",
        "Open-architected",
        "Open-source",
        "Operative",
        "Optimized",
        "Optional",
        "Organic",
        "Organized",
        "Persevering",
        "Persistent",
        "Phased",
        "Polarised",
        "Proactive",
        "Profit-focused",
        "Profound",
        "Programmable",
        "Progressive",
        "Public-key",
        "Quality-focused",
        "Reactive",
        "Realigned",
        "Reduced",
        "Reverse-engineered",
        "Robust",
        "Seamless",
        "Secured",
        "Self-enabling",
        "Sharable",
        "Smart",
        "Stand-alone",
        "Streamlined",
        "Sustainable",
        "Synchronised",
        "Team-oriented",
        "Total",
        "Triple-buffered",
        "Universal",
        "Upgradable",
        "User-centric",
        "User-friendly",
        "Versatile",
        "Virtual",
        "Visionary"
    ];

    public override ImmutableArray<string> Descriptor { get; } =
    [
        "24 hour",
        "24/7",
        "AI-powered",
        "actuating",
        "analyzing",
        "asymmetric",
        "asynchronous",
        "attitude-oriented",
        "bifurcated",
        "bottom-line",
        "clear-thinking",
        "client-driven",
        "client-server",
        "cloud-native",
        "coherent",
        "cohesive",
        "composite",
        "content-based",
        "context-sensitive",
        "contextually-based",
        "data-driven",
        "dedicated",
        "demand-driven",
        "directional",
        "discrete",
        "disintermediate",
        "dynamic",
        "eco-centric",
        "empowering",
        "encompassing",
        "executive",
        "explicit",
        "exuding",
        "fault-tolerant",
        "fresh-thinking",
        "full-range",
        "global",
        "heuristic",
        "high-level",
        "holistic",
        "homogeneous",
        "human-resource",
        "hybrid",
        "immersive",
        "impactful",
        "incremental",
        "intangible",
        "interactive",
        "intermediate",
        "leading edge",
        "local",
        "logistical",
        "maximized",
        "methodical",
        "mission-critical",
        "mobile",
        "modular",
        "motivating",
        "national",
        "needs-based",
        "neutral",
        "next generation",
        "optimal",
        "optimizing",
        "radical",
        "real-time",
        "reciprocal",
        "regional",
        "resilient",
        "responsive",
        "scalable",
        "secondary",
        "stable",
        "static",
        "sustainable",
        "system-worthy",
        "systematic",
        "systemic",
        "tangible",
        "tertiary",
        "transitional",
        "uniform",
        "user-facing",
        "value-added",
        "well-modulated",
        "zero administration",
        "zero defect",
        "zero tolerance",
        "zero trust"
    ];

    public override ImmutableArray<IWeightedValue<ITemplatedValueBuilder<FakerBase, LocaleBase>>> NamePattern { get; } =
    [
        new WeightedValue<ITemplatedValueBuilder<FakerBase, LocaleBase>>(
            new TemplatedValueBuilder<FakerBase, LocaleBase>()
                .SetTemplate("{LastName1} - {LastName2}")
                .AddRandomPlaceholder("LastName1", dataset => dataset.Person.Value.LastName.Generic)
                .AddRandomPlaceholder("LastName2", dataset => dataset.Person.Value.LastName.Generic),
            10
        ),
        new WeightedValue<ITemplatedValueBuilder<FakerBase, LocaleBase>>(
            new TemplatedValueBuilder<FakerBase, LocaleBase>()
                .SetTemplate("{LastName} {Suffix}")
                .AddRandomPlaceholder("LastName", dataset => dataset.Person.Value.LastName.Generic)
                .AddRandomPlaceholder("Suffix", dataset => dataset.Company.Value.LegalEntitySuffix),
            20
        ),
        new WeightedValue<ITemplatedValueBuilder<FakerBase, LocaleBase>>(
            new TemplatedValueBuilder<FakerBase, LocaleBase>()
                .SetTemplate("{LastName1}, {LastName2} and {LastName3}")
                .AddRandomPlaceholder("LastName1", dataset => dataset.Person.Value.LastName.Generic)
                .AddRandomPlaceholder("LastName2", dataset => dataset.Person.Value.LastName.Generic)
                .AddRandomPlaceholder("LastName3", dataset => dataset.Person.Value.LastName.Generic),
            20
        ),
        new WeightedValue<ITemplatedValueBuilder<FakerBase, LocaleBase>>(
            new TemplatedValueBuilder<FakerBase, LocaleBase>()
                .SetTemplate("{LastName} {Category} {Suffix}")
                .AddRandomPlaceholder("LastName", dataset => dataset.Person.Value.LastName.Generic)
                .AddRandomPlaceholder("Category", dataset => dataset.Company.Value.Category)
                .AddRandomPlaceholder("Suffix", dataset => dataset.Company.Value.LegalEntitySuffix),
            20
        )
    ];

    public override ImmutableArray<string> Noun { get; } =
    [
        "ability",
        "access",
        "adapter",
        "algorithm",
        "alliance",
        "analyzer",
        "application",
        "approach",
        "architecture",
        "archive",
        "array",
        "artificial intelligence",
        "attitude",
        "benchmark",
        "budgetary management",
        "capability",
        "capacity",
        "challenge",
        "circuit",
        "collaboration",
        "complexity",
        "concept",
        "conglomeration",
        "contingency",
        "core",
        "customer loyalty",
        "data-warehouse",
        "database",
        "definition",
        "emulation",
        "encoding",
        "encryption",
        "firmware",
        "flexibility",
        "focus group",
        "forecast",
        "frame",
        "framework",
        "function",
        "functionalities",
        "generative AI",
        "hardware",
        "help-desk",
        "hierarchy",
        "hub",
        "implementation",
        "infrastructure",
        "initiative",
        "installation",
        "instruction set",
        "interface",
        "internet solution",
        "intranet",
        "knowledge base",
        "knowledge user",
        "leverage",
        "local area network",
        "matrices",
        "matrix",
        "methodology",
        "microservice",
        "middleware",
        "migration",
        "model",
        "moderator",
        "monitoring",
        "moratorium",
        "neural-net",
        "open architecture",
        "orchestration",
        "paradigm",
        "parallelism",
        "policy",
        "portal",
        "pricing structure",
        "process improvement",
        "product",
        "productivity",
        "project",
        "projection",
        "protocol",
        "service-desk",
        "software",
        "solution",
        "standardization",
        "strategy",
        "structure",
        "success",
        "support",
        "synergy",
        "system engine",
        "task-force",
        "throughput",
        "time-frame",
        "toolset",
        "utilisation",
        "website",
        "workforce"
    ];

    public override ImmutableArray<string> Category { get; } =
    [
        "Agriculture and Forestry",
        "Banking and Finance",
        "Construction and Real Estate",
        "Consumer Goods",
        "Education and Training",
        "Energy and Utilities",
        "Healthcare and Pharmaceuticals",
        "Information Technology (IT)",
        "Logistics and Transportation",
        "Manufacturing",
        "Media and Entertainment",
        "Mining and Natural Resources",
        "Retail and E-commerce",
        "Telecommunications",
        "Tourism and Hospitality"
    ];

    public override ImmutableArray<string> LegalEntitySuffix { get; } =
    [
        "Group",
        "Inc",
        "LLC",
        "and Sons"
    ];
}